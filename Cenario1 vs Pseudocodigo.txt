Comparativo: Cenário 1 vs. Pseudocódigo de Dijkstra

	A solução para o Cenário 1, que encontra a estação central, utiliza o Algoritmo de Dijkstra. Nossa implementação em Python reflete as três etapas principais do pseudocódigo apresentado em aula, mas adapta a estrutura de dados para o ambiente Python.


	Inicialização: O pseudocódigo inicializa as distâncias com valores de zero para a origem e infinito para os outros vértices. Ele também define conjuntos para os vértices abertos e fechados. Nossa implementação faz o mesmo usando um dicionário em Python para as distâncias e uma fila de prioridade (heapq) para gerenciar eficientemente os vértices "abertos".


	Loop Principal: O pseudocódigo repete o processo até que todos os vértices sejam fechados. Em cada repetição, ele seleciona o vértice com a menor distância da origem. Nossa implementação usa o 


	while loop e a função heappop da fila de prioridade para extrair automaticamente o vértice de menor custo, simplificando a lógica do loop.


	Relaxamento: O pseudocódigo compara o custo do novo caminho (passando por um vértice recém-visitado) com o custo atual de um vizinho. Se o novo caminho for mais curto, a distância do vizinho é atualizada. O nosso código implementa essa mesma lógica de "relaxamento" em um loop 


	for que percorre todos os vizinhos do vértice atual, atualizando as distâncias quando um caminho mais curto é encontrado.